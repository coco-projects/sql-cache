{
	"name"                 : "coco-project/sql-cache",
	"description"          : "Based on the lexical analysis of \"update,\" \"select,\" \"insert,\" and \"delete\" SQL statements, an automatic caching strategy is implemented. The strategy involves caching the data when executing a select operation and associating the table name contained in the SQL statement with the corresponding cached records. When executing update, insert, or delete operations, the table name from the SQL statement is extracted, and any cached records containing this table name from previous select operations are deleted. This strategy enables seamless caching without delay and eliminates the need to worry about data synchronization issues. It is particularly effective for tables with infrequent data modifications. For tables with frequent modifications, they can be ignored by configuring the strategy accordingly.",
	"type"                 : "library",
	"license"              : "MIT",
	"require"              : {
		"php"                      : ">=8.0",
		"greenlion/php-sql-parser" : "^4.6",
		"symfony/cache"            : "^5.4"
	},
	"autoload"             : {
		"psr-4" : {
			"Coco\\sqlCache\\" : "src/",
			"Coco\\examples\\" : "examples/"
		}
	},
	"require-dev"          : {
		"phpstan/phpstan"           : "1.11.x-dev",
		"phpunit/phpunit"           : "9.6.x-dev",
		"squizlabs/php_codesniffer" : "4.0.x-dev"
	},
	"autoload-dev"         : {
		"psr-4" : {
			"Coco\\Tests\\" : "tests"
		}
	},
	"scripts"              : {
		"test"        : "./vendor/phpunit/phpunit/phpunit ",
		"analyse"     : "./vendor/bin/phpstan analyse -vvv --error-format=table > .phpstan.txt",
		"check-style" : "./vendor/squizlabs/php_codesniffer/bin/phpcs  -p --standard=PSR2 --runtime-set ignore_errors_on_exit 1 --runtime-set ignore_warnings_on_exit 1 src tests",
		"fix-style"   : "./vendor/squizlabs/php_codesniffer/bin/phpcbf -p --standard=PSR2 --runtime-set ignore_errors_on_exit 1 --runtime-set ignore_warnings_on_exit 1 src tests",
		"run-test"    : [
			"@test",
			"@fix-style",
			"@analyse"
		]
	},
	"scripts-descriptions" : {
		"test"        : "Run unit tests",
		"check-style" : "Check code formatting with phpcs",
		"fix-style"   : "Fix code formatting with phpcbf",
		"analyse"     : "Run code analysis with phpstan",
		"run-test"    : "Execute test, fix-style, and analyse"
	},
	"config"               : {
		"sort-packages" : true,
		"allow-plugins" : {
			"symfony/flex"                : true,
			"phpstan/extension-installer" : true
		},
		"platform"      : {
			"php" : "8.0"
		}
	}
}
